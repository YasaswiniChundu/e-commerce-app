package org.jsp.ecommerce.controller;

import java.util.List;

import org.jsp.ecommerce.dto.ResponseStructure;
import org.jsp.ecommerce.model.Product;
import org.jsp.ecommerce.service.ProductService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping(value="/products")
public class ProductController {

	@Autowired
	private ProductService service;
	
	@PostMapping
	@ResponseStatus(code=HttpStatus.CREATED)
	public ResponseEntity<ResponseStructure<Product>> saveProduct(@RequestBody Product product,@PathVariable int merchant_id) {
		return service.saveProduct(product,merchant_id);
	}
	
	@PutMapping
	public ResponseEntity<ResponseStructure<Product>> updateProduct(@RequestBody Product product) {
		return service.updateProduct(product);
	}
	
	@GetMapping
	public ResponseEntity<ResponseStructure<List<Product>>> findAll() {
		return service.findAll();
	}
	
	@GetMapping
	public ResponseEntity<ResponseStructure<Product>> findById(@PathVariable int id) {
		return service.findById(id);
	}
	
	@GetMapping
	public ResponseEntity<ResponseStructure<List<Product>>> findByCategory(@PathVariable String category) {
		return service.findByCategory(category);
	}
	
	@GetMapping
	public ResponseEntity<ResponseStructure<List<Product>>> findByBrand(@PathVariable String brand) {
		return service.findByBrand(brand);
	}
	
	@GetMapping
	public ResponseEntity<ResponseStructure<List<Product>>> findByMerchantId(@PathVariable int id) {
		return service.findByMerchantId(id);
	}
	
	
}
